provider: aws
region: us-west-2
resources:
  ec2_instance:
    name: my-ec2-instance
    instance_type: t2.micro
    ami: ami-0c55b159cbfafe1f0  # Amazon Linux 2 AMI
    key_name: id_ed25519.pub
    security_groups:
      - sg-0123456789abcdef0
    subnet_id: subnet-0123456789abcdef0  # Added
    vpc_security_group_ids:  # Added
      - sg-0123456789abcdef0
    monitoring: true  # Added
    tags:
      Environment: Development
      Project: MyProject

  s3_bucket:
    name: my-s3-bucket
    acl: private
    tags:
      Environment: Development
      Project: MyProject

  rds_instance:
    name: my-rds-instance
    engine: mysql
    engine_version: 8.0
    instance_class: db.t3.micro
    allocated_storage: 20
    username: admin
    password: mypassword
    tags:
      Environment: Development
      Project: MyProject

  alb:
    name: my-alb
    scheme: internet-facing
    subnets:
      - subnet-0123456789abcdef0
      - subnet-0123456789abcdef1
    security_groups:
      - sg-0123456789abcdef0
    listeners:
      - protocol: HTTP
        port: 80
        default_action:
          type: forward
          target_group: my-target-group
    target_groups:
      - name: my-target-group
        protocol: HTTP
        port: 80
        health_check_path: /health
        health_check_port: 80
        health_check_interval: 30
        health_check_timeout: 5
        healthy_threshold: 3
        unhealthy_threshold: 3
    tags:
      Environment: Development
      Project: MyProject

  autoscaling_group:
    name: my-asg
    min_size: 1
    max_size: 3
    desired_capacity: 2
    launch_template:
      name: my-launch-template
      version: "$Latest"
    vpc_zone_identifier:
      - subnet-0123456789abcdef0
      - subnet-0123456789abcdef1
    target_group_arns:
      - arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-target-group/0123456789abcdef
    tags:
      Environment: Development
      Project: MyProject

  iam_role:
    name: my-iam-role
    assume_role_policy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "Service": "ec2.amazonaws.com"
            },
            "Action": "sts:AssumeRole"
          }
        ]
      }
    policies:
      - name: my-ec2-policy
        policy: |
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "ec2:DescribeInstances",
                  "ec2:RunInstances",
                  "ec2:TerminateInstances"
                ],
                "Resource": "*"
              }
            ]
          }
      - name: my-s3-policy
        policy: |
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "s3:CreateBucket",
                  "s3:DeleteBucket",
                  "s3:ListBucket"
                ],
                "Resource": "*"
              }
            ]
          }
      - name: my-rds-policy
        policy: |
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "rds:CreateDBInstance",
                  "rds:DeleteDBInstance",
                  "rds:DescribeDBInstances"
                ],
                "Resource": "*"
              }
            ]
          }